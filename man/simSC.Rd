% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simu.R
\name{simSC}
\alias{simSC}
\title{Function to generate simulated recurrent event data}
\usage{
simSC(
  n,
  summary = FALSE,
  alpha,
  beta,
  eta,
  theta,
  xmat,
  censoring,
  frailty,
  tau,
  origin,
  Lam0,
  Haz0
)
}
\arguments{
\item{n}{number of observation.}

\item{summary}{a logical value indicating whether a brief data summary will be printed.}

\item{alpha, beta, eta, theta}{are numerical vectors correspond to the \eqn{\alpha}, \eqn{\beta}, \eqn{\eta}, and \eqn{\theta} in the joint model, respectively. See \bold{Details}}

\item{xmat}{an optional matrix specifying the design matrix.}

\item{censoring}{a numeric variable specifying the censoring times for each of the \eqn{n} observation.}

\item{frailty}{a numeric variable specifying the frailty variable.}

\item{tau}{a numeric value specifying the maximum observation time.}

\item{origin}{a numeric value specifying the time origin.}

\item{Lam0}{is an optional function that specifies the baseline cumulative rate function.
When left-unspecified, the recurrent events are generated using the
baseline rate function of \deqn{\lambda_0(t) = \frac{2}{1 + t},} or equivalently,
the cumulative rate function of \deqn{\Lambda_0(t) = 2\log(1 + t).}}

\item{Haz0}{is an optional function that specifies the baseline hazard function.
When left-unspecified, the recurrent events are generated using the baseline hazard function
\deqn{h_0(t) = \frac{1}{8(1 + t)},} or equivalently,
the cumulative hazard function of \deqn{H_0(t) = \log(1 + t) / 8.}}
}
\description{
The function \code{simSC()} generates simulated recurrent event data from either
a Cox-type model, an accelerated mean model, an accelerated rate model, or a scale-change model.
}
\details{
The function \code{simSC()} generates simulated recurrent event data over
the interval \eqn{(0, \tau)} based on the specification of the recurrent process and
the terminal events.
Specifically, the rate function, \eqn{\lambda(t)}, of the recurrent process
can be specified as one of the following model:
\deqn{\lambda(t) = Z \lambda_0(te^{X^\top\alpha}) e^{X^\top\beta}, h(t) = Z h_0(te^{X^\top\eta})e^{X^\top\theta}, }
where \eqn{\lambda_0(t)} is the baseline rate function, \eqn{h_0(t)} is the baseline hazard function,
\eqn{X} is a \eqn{n} by \eqn{p} covariate matrix and \eqn{\alpha},
\eqn{Z} is an unobserved shared frailty variable, and
\eqn{(\alpha, \eta)} and \eqn{(\beta, \theta)} correspond to the shape and size parameters of the
rate function and the hazard function, respectively.

For all scenarios, two covariates are considered; \eqn{X = (X_1, X_2)}, where
\eqn{X_1} follows a Bernoulli distribution with probability 0.5 and
\eqn{X_2} follows a standard normal distribution.
The censoring time could be either independent (given covariates) or informative.
The simulated data is used for illustration.
An informative censoring time, \eqn{C}, is generated separately from an
exponential distribution with a rate parameter of 1 / 60 if \eqn{X_1} is 1,
or \eqn{Z^2 / 30} if \eqn{X_1} is 0.
The observed recurrent events is then observed up to the minimum of \eqn{C},
terminal event, and \eqn{\tau}.
Lastly, when \code{lam0} is not specified, we assume the baseline rate function
to be \deqn{\lambda_0(t) = \frac{2}{1 + t}}.
On the other hand, when \code{haz0} is not specified, we assume
the baseline hazard function to be \deqn{h_0(t) = \frac{1}{8(1 + t)}}.
}
\examples{
set.seed(123)
simSC(100, summary = TRUE)
}
\seealso{
\code{\link{reReg}}
}
