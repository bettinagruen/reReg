% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simu.R
\name{simSC}
\alias{simSC}
\title{Function to generate simulated recurrent event data}
\usage{
simSC(n, a, b, indCen = TRUE, type = "cox", tau = 60, zVar = 0.25,
  summary = FALSE)
}
\arguments{
\item{n}{number of observation.}

\item{a}{a numeric vector of parameter of length 2.}

\item{b}{a numeric vector of parameter of length 2.}

\item{indCen}{a logical value indicating whether the censoring assumption is imposed.
When \code{indCen = TRUE}, we set \eqn{Z = 1}.
Otherwise, \eqn{Z} is generated from a unit-mean gamma distribution 
See \bold{Details}.}

\item{type}{a character string specifying the underlying model.
See \bold{Details}}

\item{tau}{a numeric value specifying the maximum observation time.}

\item{zVar}{a numeric variable specifying the variance of \eqn{Z}.
This is only needed when \eqn{indCen} is TRUE.
The default value is 0.25.}

\item{summary}{a logical value indicating whether a brief data summary will be printed.}
}
\description{
The function \code{simSC} generates simulated recurrent event data from either
a Cox-type model, an accelerated mean model, or a scale-change model.
For all scenarios, two covariates are considered; \eqn{X = (X_1, X_2)}, where
\eqn{X_1} follows a Bernoulli distribution with probability 0.5 and
\eqn{X_2} follows a standard normal distribution.
The censoring time could be either independent (given covariates) or informative.
The simulated data is used for illustration.
}
\details{
The function \code{simSC()} generates simulated recurrent event data over
the interval \eqn{(0, \tau)} based on the specification of the recurrent process and
the terminal events.
Specifically, the rate function, \eqn{\lambda(t)}, of the recurrent process
can be specified as one of the following model:
\describe{
  \item{Cox-type model}{
\deqn{\lambda(t) = Z \lambda_0(t) e^{X^\top a}.}}
  \item{Accelerated mean model}{
\deqn{\lambda(t) = Z \lambda_0(te^{X^\top a}) e^{X^\top a}.}}
  \item{Scale-change model}{
\deqn{\lambda(t) = Z \lambda_0(te^{X^\top a}) e^{X^\top b}.}}
}
Similarly, the hazard function, \eqn{h(t)}, of the terminal event 
can be specified as one of the following model:
\describe{
  \item{Cox-type model}{
\deqn{h(t) = Zh_0(t)e^{X^\top b}.}}
  \item{Accelerated mean model}{
\deqn{h(t) = Zh_0(te^{X^\top b})e^{X^\top b}.}}
  \item{Scale-change model}{
\deqn{h(t) = Zh_0(te^{X^\top a})e^{X^\top b}.}}
}
Am informative censoring time, \eqn{C}, is generated separately from an
exponential distribution with a rate parameter of 1 / 60 if \eqn{X_1} is 1,
or \eqn{Z^2 / 30} if \eqn{X_1} is 0.
The observed recurrent events is then observed up to the minimum of \eqn{C},
terminal event, and \eqn{\tau}.
Lastly, we assume the baseline functions
\deqn{\lambda_0(t) = \frac{2}{1 + t}, h_0(t) = \frac{1}{8(1 + t)}.}
}
\examples{
set.seed(123)
simSC(200, c(-1, 1), c(-1, 1), summary = TRUE)
}
\seealso{
\code{\link{reReg}}
}
